{"ast":null,"code":"var _jsxFileName = \"D:\\\\Visual Studio Code\\\\Web\\\\React\\\\Ecomercial\\\\frontend\\\\src\\\\screen\\\\ProfileScreen.js\",\n  _s = $RefreshSig$();\nimport { useContext, useReducer, useState } from \"react\";\nimport { Store } from \"../Store\";\nimport { Helmet } from \"react-helmet-async\";\nimport Form from 'react-bootstrap/Form';\nimport Button from \"react-bootstrap/Button\";\nimport { toast } from \"react-toastify\";\nimport { getError } from \"../utils\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'UPDATE_REQUEST':\n      return {\n        ...state,\n        loadingUpdate: true\n      };\n    case 'UPDATE_SUCCESS':\n      return {\n        ...state,\n        loadingUpdate: false\n      };\n    case 'UPDATE_FAIL':\n      return {\n        ...state,\n        loadingUpdate: false\n      };\n    default:\n      return state;\n  }\n};\nexport default function ProfileScreen() {\n  _s();\n  const {\n    state,\n    dispatch: ctxDispatch\n  } = useContext(Store);\n  const {\n    userInfo\n  } = state;\n  const [name, setName] = useState(userInfo.name);\n  const [email, setEmail] = useState(userInfo.email);\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [{\n    loadingUpdate\n  }, dispatch] = useReducer(reducer, {\n    loadingUpdate: false\n  });\n  const submitHandler = async e => {\n    e.preventDefault();\n    try {\n      const {\n        data\n      } = await axios.put('/api/users/profile', {\n        name,\n        email,\n        password\n      });\n    } catch (error) {\n      dispatch({\n        type: 'FETCH_FAIL'\n      });\n      toast.error(getError(error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container small-container\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"User profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"email\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"password\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"confirmPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Confirm password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n}\n_s(ProfileScreen, \"LFH5AWXe4fyavoE214j8fJq7tB4=\");\n_c = ProfileScreen;\nvar _c;\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"names":["useContext","useReducer","useState","Store","Helmet","Form","Button","toast","getError","axios","jsxDEV","_jsxDEV","reducer","state","action","type","loadingUpdate","ProfileScreen","_s","dispatch","ctxDispatch","userInfo","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","submitHandler","e","preventDefault","data","put","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Group","controlId","Label","Control","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/Visual Studio Code/Web/React/Ecomercial/frontend/src/screen/ProfileScreen.js"],"sourcesContent":["import { useContext, useReducer, useState } from \"react\";\r\nimport { Store } from \"../Store\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getError } from \"../utils\";\r\nimport axios from \"axios\";\r\n\r\nconst reducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'UPDATE_REQUEST':\r\n\t\t\treturn { ...state, loadingUpdate: true };\r\n\t\tcase 'UPDATE_SUCCESS':\r\n\t\t\treturn { ...state, loadingUpdate: false };\r\n\t\tcase 'UPDATE_FAIL':\r\n\t\t\treturn { ...state, loadingUpdate: false };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default function ProfileScreen() {\r\n\tconst { state, dispatch: ctxDispatch } = useContext(Store);\r\n\tconst { userInfo } = state;\r\n\tconst [name, setName] = useState(userInfo.name);\r\n\tconst [email, setEmail] = useState(userInfo.email);\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n\tconst [{ loadingUpdate }, dispatch] = useReducer(reducer, {\r\n\t\tloadingUpdate: false,\r\n\t});\r\n\r\n\tconst submitHandler = async (e) => {\r\n\t\te.preventDefault();\r\n\t\ttry {\r\n\t\t\tconst { data } = await axios.put('/api/users/profile', {\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t},)\r\n\t\t} catch (error) {\r\n\t\t\tdispatch({ type: 'FETCH_FAIL' });\r\n\t\t\ttoast.error(getError(error));\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container small-container\">\r\n\t\t\t<Helmet>\r\n\t\t\t\t<title>User profile</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<h1>User profile</h1>\r\n\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"name\">\r\n\t\t\t\t\t<Form.Label>Name</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"email\">\r\n\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\trequired\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"password\">\r\n\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<Form.Group className=\"mb-3\" controlId=\"confirmPassword\">\r\n\t\t\t\t\t<Form.Label>Confirm password</Form.Label>\r\n\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form.Group>\r\n\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t<Button type=\"submit\">Update</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}